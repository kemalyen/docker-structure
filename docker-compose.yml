version: "3"
    
services:
    webserver:
        build: 
          context: .
          dockerfile: ./dockerfiles/apache/Dockerfile
        image: alien/apache
        container_name: apache2
        restart: always
        volumes: 
          - ./app:/var/www
          - ./dockerfiles/apache/sites-available/:/etc/apache2/sites-available
          - ./dockerfiles/apache/apache2.conf:/etc/apache2/apache2.conf
        ports:
          - "80:80"
          - "443:443"  
        tty: true
        networks:    
          - app-network       
        depends_on:
          - php
          - db
    nginx:
        image: nginx:alpine
        container_name: nginx
        restart: unless-stopped
        ports:
          - 8000:80
        volumes:
          - ./app:/var/www
          - ./dockerfiles/nginx/sites/:/etc/nginx/conf.d/
        networks:
          - app-network                           
        depends_on: 
          - php
          - db 
    php:
        build:
            context: .
            dockerfile: ./dockerfiles/php/Dockerfile
        image: alien/php
        container_name: phpapp
        restart: unless-stopped
        tty: true
        environment:
            SERVICE_NAME: app
            SERVICE_TAGS: dev
        working_dir: /var/www
        ports:
          - "9000:9000"
        volumes:
            - ./app:/var/www/
        networks:
            - app-network
        depends_on:
            - db 
    db:
        image: mysql:5.7
        volumes:
          - dbdata:/var/lib/mysql
        restart: always
        container_name: mysql
        ports:
          - 3306:3306              
        environment:
            MYSQL_ROOT_PASSWORD: passme
            MYSQL_DATABASE: alien
            MYSQL_USER: alien
            MYSQL_PASSWORD: passme
        networks:
        - app-network       
    adminer:
        image: adminer
        restart: always
        ports:
        - 8080:8080
    worker:
      build: 
        context: .
        dockerfile: ./dockerfiles/worker/Dockerfile
      container_name: phpworker
      volumes:
          - "./app:/var/www"
          - "./dockerfiles/worker/conf/supervisord.conf:/etc/supervisor/supervisord.conf"
          - "./dockerfiles/worker/conf/app.conf:/etc/supervisor/conf.d/app.conf"
      command: ["supervisord", "-c", "/etc/supervisor/supervisord.conf"]        
    rabbitmq:
      build: 
        context: .
        dockerfile: ./dockerfiles/rabbitmq/Dockerfile
      container_name: rabbitmq
      environment:
        - RABBITMQ_DEFAULT_USER=admin
        - RABBITMQ_DEFAULT_PASS=admin
      ports:
        - "5672:5672"
        - "15672:15672"
        - "15671:15671"        
      depends_on: 
        - php
      networks: 
        - app-network
networks:
  app-network:
    driver: bridge
volumes:
  dbdata:
    driver: local 